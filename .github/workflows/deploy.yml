# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the trunk branch
  push:
  pull_request:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  build:
    name: Pylint
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: 3.7
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pylint black
        pip install --requirement requirements.txt
        
    - name: Analysing the code with pylint
      run: |
        if [ -f *.py ]; then
          black `ls -R *.py|xargs`
          pylint `ls -R *.py|xargs`
        fi
#          pylint `ls -R|grep .py$|xargs`

  deploy:
    # https://github.com/BogDAAAMN/deta-deploy-action/blob/main/action.yml
    runs-on: ubuntu-20.04
    needs: build
    steps:
    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: 3.7
    - name: Deploy to Deta
      #uses: BogDAAAMN/deta-deploy-action@v1.0.0
      #with:
      #  deta-access-token: ${{ secrets.DETA_PROJECT_KEY }} # Deta access token https://docs.deta.sh/docs/cli/auth
      #  deta-name: ${{ secrets.DETA_PROJECT_NAME }} # Deta Micro name https://docs.deta.sh/docs/cli/commands/#deta-clone
      #  deta-project: 'default' # default 'default' Deta project name https://docs.deta.sh/docs/cli/commands/#deta-clone
      shell: bash
      run: |
        python -m pip install --upgrade pip
        pip install deta 
        export DETA_ACCESS_TOKEN=${{ secrets.DETA_PROJECT_KEY }}
        ~/.deta/bin/deta deploy
        echo $PATH
