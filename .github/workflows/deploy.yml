# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the trunk branch
  push:
  pull_request:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  build:
    name: Pylint
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: 3.7
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pylint black
        pip install --requirement requirements.txt
        
    - name: Analysing the code with pylint
      run: |
        if [ -f *.py ]; then
          black `ls -R *.py|xargs`
          pylint `ls -R *.py|xargs`
        fi
#          pylint `ls -R|grep .py$|xargs`

  deploy:
    
    runs-on: ubuntu-20.04
    needs: build

    steps:
    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: 3.7

    # https://github.com/actions/checkout
    - name: Checkout
      uses: actions/checkout@v2
      with:
        repository: ${{ github.repository }}
        # The branch, tag or SHA to checkout. When checking out the repository that
        # triggered a workflow, this defaults to the reference or SHA for that event.
        # Otherwise, uses the default branch.
        ref: 'dev'
        # Relative path under $GITHUB_WORKSPACE to place the repository
        path: ''
    
    # https://github.com/BogDAAAMN/deta-deploy-action/blob/main/action.yml    
    - name: Install Deta CLI
      shell: bash
      run: |
        curl -fsSL https://get.deta.dev/cli.sh | sh
    
    # Using the access token and existing Deta micro and project,
    # clone the micro and copy .deta metadata folder to use it in deploy
    # https://docs.deta.sh/docs/cli/commands#deta-clone
    - name: Clone Deta Metadata
      shell: bash
      run: |
        env
        export DETA_ACCESS_TOKEN=${{ secrets.DETA_PROJECT_KEY }}
        $(HOME)/.deta/bin/deta clone --name ${{ secrets.DETA_PROJECT_NAME }} --project default tmp/
        cp -r tmp/.deta .deta
        
    - name: Deploy to Deta
      shell: bash
      run: |
        export DETA_ACCESS_TOKEN=${{ secrets.DETA_PROJECT_KEY }}
        $(HOME)/.deta/bin/deta deploy
        
env:
  icon: check-circle
  color: purple
